h1. WordPress-CI

Author: James Brumond
Version: 0.1.1-dev

Copyright 2011 James Brumond
Dual licensed under MIT and GPL

h2. Description

WordPress-CI is a "CodeIgniter":http://codeigniter.com model for interfacing with a WordPress database and user systems. It can do everthing from reading posts out of your blog to checking if the current user is logged in to your blog and accessing their user data. This model is useful if you have a website *and* a blog in the same site and want them to be able to interact and share user data.

h2. Current Status

This model is still under construction. Do not attempt to implement at this time.

h2. Configuration

The following config settings are available for use:

* *logged_in_key* - Should have the same value as <code>LOGGED_IN_KEY</code> in your wp-config.php file
* *logged_in_salt* - Should have the same value as <code>LOGGED_IN_SALT</code> in your wp-config.php file
* *table_prefix* - Should have the same value as <code>$table_prefix</code> in your wp-config.php file
* *secret_key* - Provides the same function as <code>SECRET_KEY</code> in WP (if in doubt, don't use it).
* *blog_id* - The blog_id value if using WP in multisite mode.

h2. Initializing

Same as any CodeIgniter model:

<pre><code>$this->load->model('wordpress');</code></pre>

And then call functions as:
    
<pre><code>$this->wordpress->function_name(...);</code></pre>

h2. Functions

This is a list of all public functions (not <code>_underscore</code> functions)

h3. void set_table_prefix ( string $prefix )

Override the table prefix value (provides the same function as the <code>table_prefix</code> config option.

h3. mixed get_option ( string $option[, bool $test = false ])

Get a site option (eg. site_url). If <code>$test</code> is set to <code>TRUE</code>, then this function will just return a bool representating whether or not the option exists in the database.

h3. void set_option ( string $option, mixed $value )

Set a site option (eg. site_url).


















